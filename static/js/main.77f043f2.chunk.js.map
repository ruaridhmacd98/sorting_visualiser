{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["swap","i","j","array","animations","tmp","push","algorithms","value","length","auxiliaryArray","slice","mergeSort","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","doMerge","label","quickSort","left","right","index","pivot","partition","min","selectionSort","n","sorted","console","log","cocktailSort","len","bubbleSort","isSorted","shuffle","count","random","sort","bogoSort","arrays","NUMBER_OF_ARRAY_BARS","randomIntFromInterval","a","b","reverse","ANIMATION_SPEED_MS","SortingVisualizer","props","selectAlgorithm","sortingAlgorithm","setState","state","arrayFunc","func","this","arrayBars","document","getElementsByClassName","setTimeout","barOneIdx","newHeight","style","backgroundColor","play_animations","algorithm","className","onChange","options","placeholder","onClick","e","chooseArray","map","idx","key","height","React","Component","max","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6UAwCA,SAASA,EACPC,EAAGC,EAAGC,EAAOC,GAEb,IAAIC,EAAMF,EAAMF,GAKlB,OAJEE,EAAMF,GAAKE,EAAMD,GACjBE,EAAWE,KAAK,CAACL,EAAGE,EAAMD,KAC1BC,EAAMD,GAAKG,EACXD,EAAWE,KAAK,CAACJ,EAAGG,IACf,CAACF,EAAOC,G,UCrCTG,EAAa,CACjB,CAAEC,MDoBG,SAAsBL,GAC3B,IAAMC,EAAa,GACnB,GAAID,EAAMM,QAAU,EAAG,OAAON,EAC9B,IAAMO,EAAiBP,EAAMQ,QAE7B,OAmJF,SAASC,EACPC,EACAC,EACAC,EACAL,EACAN,GAEA,GAAIU,IAAaC,EAAQ,OACzB,IAAMC,EAAYC,KAAKC,OAAOJ,EAAWC,GAAU,GACnDH,EAAUF,EAAgBI,EAAUE,EAAWH,EAAWT,GAC1DQ,EAAUF,EAAgBM,EAAY,EAAGD,EAAQF,EAAWT,IAI9D,SACES,EACAC,EACAE,EACAD,EACAL,EACAN,GAEA,IAAIe,EAAIL,EACJb,EAAIa,EACJZ,EAAIc,EAAY,EACpB,KAAOf,GAAKe,GAAad,GAAKa,GACxBL,EAAeT,IAAMS,EAAeR,IACtCE,EAAWE,KAAK,CAACa,EAAGT,EAAeT,KACnCY,EAAUM,KAAOT,EAAeT,OAEhCG,EAAWE,KAAK,CAACa,EAAGT,EAAeR,KACnCW,EAAUM,KAAOT,EAAeR,MAGpC,KAAOD,GAAKe,GACVZ,EAAWE,KAAK,CAACa,EAAGT,EAAeT,KACnCY,EAAUM,KAAOT,EAAeT,KAElC,KAAOC,GAAKa,GACVX,EAAWE,KAAK,CAACa,EAAGT,EAAeR,KACnCW,EAAUM,KAAOT,EAAeR,KA7BlCkB,CAAQP,EAAWC,EAAUE,EAAWD,EAAQL,EAAgBN,GA/JhEQ,CAAUT,EAAO,EAAGA,EAAMM,OAAS,EAAGC,EAAgBN,GAC/CA,GCzBgBiB,MAAO,cAC9B,CAAEb,MDCG,SAAsBL,GAC3B,IAAMC,EAAa,GAEnB,OAkFF,SAASkB,EAAUnB,EAAOC,EAAYmB,EAAMC,GAqB1C,IAAIC,EACAtB,EAAMM,OAAS,IACjBgB,EAtBF,SAAmBtB,EAAOC,EAAYmB,EAAMC,GAG1C,IAFA,IAAIE,EAAQvB,EAAMc,KAAKC,OAAOM,EAAQD,GAAQ,IAC5CtB,EAAIsB,EAAMrB,EAAIsB,EACTvB,GAAKC,GAAG,CACb,KAAOC,EAAMF,GAAKyB,GAAM,CAAC,IAAD,EACA1B,EAAKC,EAAGA,EAAGE,EAAOC,GADlB,mBACrBD,EADqB,KACdC,EADc,KAEtBH,IAEF,KAAOE,EAAMD,GAAKwB,GAAM,CAAC,IAAD,EACA1B,EAAKC,EAAGA,EAAGE,EAAOC,GADlB,mBACrBD,EADqB,KACdC,EADc,KAEtBF,IAEF,GAAID,GAAKC,EAAE,CAAC,IAAD,EACaF,EAAKC,EAAGC,EAAGC,EAAOC,GAD/B,mBACRD,EADQ,KACDC,EADC,KAETH,IAAKC,KAGT,OAAOD,EAKC0B,CAAUxB,EAAOC,EAAYmB,EAAMC,GACvCD,EAAOE,EAAQ,GACjBH,EAAUnB,EAAOC,EAAYmB,EAAME,EAAM,GAEvCD,EAAQC,GACVH,EAAUnB,EAAOC,EAAYqB,EAAOD,IA/GxCF,CAAUnB,EAAOC,EAAY,EAAGD,EAAMM,OAAO,GACtCL,GCJgBiB,MAAO,cAC9B,CAAEb,MDMG,SAA0BL,GAC/B,IAAMC,EAAa,GAEnB,OA4BF,SAAuBD,EAAOC,GAC5B,IAAK,IAAIH,EAAI,EAAGA,EAAIE,EAAMM,OAAQR,IAAI,CAEpC,IADA,IAAI2B,EAAM3B,EACFC,EAAID,EAAE,EAAGC,EAAIC,EAAMM,OAAQP,IACjCF,EAAKE,EAAGA,EAAGC,EAAOC,GACfD,EAAMD,GAAKC,EAAMyB,KAClBA,EAAM1B,GAGVF,EAAKC,EAAG2B,EAAKzB,EAAOC,IAtCtByB,CAAc1B,EAAOC,GACdA,GCToBiB,MAAO,kBAClC,CAAEb,MDRG,SAAyBL,GAC9B,IAAMC,EAAa,GACnB,OAAID,EAAMM,QAAU,EAAUN,GA2HhC,SAAsBA,EAAOC,GAEzB,IAAI0B,EAAI3B,EAAMM,OACVsB,GAAS,EACbC,QAAQC,IAAIH,GAEZ,MAAQC,GAAQ,CACZA,GAAS,EACT,IAAK,IAAI9B,EAAI,EAAGA,EAAI6B,EAAI,EAAG7B,IACvB,GAAIE,EAAMF,GAAKE,EAAMF,EAAI,GAAG,CAAC,IAAD,EACJD,EAAKC,EAAGA,EAAE,EAAGE,EAAOC,GADhB,mBACzBD,EADyB,KAClBC,EADkB,KAEzB2B,GAAS,MAEP,CAAC,IAAD,EACmB/B,EAAKC,EAAGA,EAAGE,EAAOC,GADrC,mBACFD,EADE,KACKC,EADL,KAMd,GAAI2B,EACA,MACJA,GAAS,EAEJ,IAAK,IAAI7B,EAAI4B,EAAI,EAAG5B,EAAI,EAAGA,IACvB,GAAIC,EAAMD,EAAE,GAAKC,EAAMD,GAAI,CAAC,IAAD,EACDF,EAAKE,EAAGA,EAAE,EAAGC,EAAOC,GADnB,mBACtBD,EADsB,KACfC,EADe,KAEvB2B,GAAS,MAER,CAAC,IAAD,EACqB/B,EAAKE,EAAGA,EAAGC,EAAOC,GADvC,mBACAD,EADA,KACOC,EADP,OAtJf8B,CAAa/B,EAAOC,GACbA,ICImBiB,MAAO,wBACjC,CAAEb,MDhBG,SAAuBL,GAC5B,IAAMC,EAAa,GACnB,OAAID,EAAMM,QAAU,EAAUN,GAqKhC,SACEA,EACAC,GAGA,IADA,IAAI+B,EAAMhC,EAAMM,OACPR,EAAI,EAAGA,EAAIkC,EAAKlC,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIiC,EAAM,EAAIlC,EAAGC,IAC/B,GAAIC,EAAMD,GAAKC,EAAMD,EAAI,GAAI,CAAC,IAAD,EACLF,EAAKE,EAAGA,EAAE,EAAGC,EAAOC,GADf,mBAC1BD,EAD0B,KACnBC,EADmB,SAGxB,CAAC,IAAD,EACmBJ,EAAKE,EAAGA,EAAGC,EAAOC,GADrC,mBACFD,EADE,KACKC,EADL,MA9KTgC,CAAWjC,EAAOC,GACXA,ICYiBiB,MAAO,eAC/B,CAAEb,MDSG,SAAqBL,GAC1B,IAAMC,EAAa,GAEnB,OAmCF,SAAkBD,EAAOC,GACvB,SAASiC,EAAUlC,GACb,IAAI,IAAIF,EAAI,EAAGA,EAAIE,EAAMM,OAAQR,IAC7B,GAAIE,EAAMF,EAAE,GAAKE,EAAMF,GACnB,OAAO,EAGf,OAAO,EAGb,SAASqC,EAAQnC,EAAOC,GAElB,IADA,IAAImC,EAAQpC,EAAMM,OACZ8B,EAAQ,GAAE,OAGUvC,IADtBuC,EADQtB,KAAKC,MAAMD,KAAKuB,SAAWrC,EAAMM,QAEAN,EAAOC,GAHpC,mBAGXD,EAHW,KAGJC,EAHI,KAKhB,OAAOD,GAGZ,SAAcA,GAIT,IAHA,IAAI4B,GAAS,EAETQ,EAAQ,GACLR,GAAWQ,EAFA,KAIdR,EAASM,EADTlC,EAAQmC,EAAQnC,EAAOC,IAEvBmC,KAKDE,CAAKtC,GApEduC,CAASvC,EAAOC,GACTA,GCZeiB,MAAO,cAGzBsB,EAAS,CACb,CAAEnC,MA2FJ,WAEE,IADA,IAAML,EAAQ,GACLF,EAAI,EAAGA,EAAI2C,EAAsB3C,IACxCE,EAAMG,KAAKuC,EAAsB,EAAG,MAEtC,OAAO1C,GAhGekB,MAAO,gBAC7B,CAAEb,MAkGJ,WAEE,IADA,IAAML,EAAQ,GACLF,EAAI,EAAGA,EAAI2C,EAAsB3C,IACxCE,EAAMG,KAAKuC,EAAsB,EAAG,MAItC,OAFA1C,EAAMsC,MAAK,SAASK,EAAGC,GAAG,OAAOD,EAAIC,KACrC5C,EAAM6C,UACC7C,GAzGiBkB,MAAO,kBAC/B,CAAEb,MA2GJ,WAEE,IADA,IAAML,EAAQ,GACLF,EAAI,EAAGA,EAAI2C,EAAsB3C,IACxCE,EAAMG,KAAKuC,EAAsB,EAAG,MAEtC1C,EAAMsC,MAAK,SAASK,EAAGC,GAAG,OAAOD,EAAIC,KACrC,IAAK,IAAI5B,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMlB,EAAI4C,EAAsB,EAAGD,GAC7B1C,EAAI2C,EAAsB,EAAGD,GACnC5C,EAAKC,EAAGC,EAAGC,GAEb,OAAOA,GAtHgBkB,MAAO,wBAG1B4B,EAAqB,GACrBL,EAAuB,IAERM,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAQRC,gBAAkB,SAAAC,GAChB,EAAKC,SACH,CAAED,iBAAkBA,KARtB,EAAKE,MAAQ,CACXpD,MAAO,GACPkD,iBAAkB,MALH,E,yEAePG,GACXxB,QAAQC,IAAIuB,GACX,IAAIC,EAAOD,EAAUhD,MACtBwB,QAAQC,IAAIwB,GACX,IAAMtD,EAAQsD,IACdC,KAAKJ,SAAS,CAACnD,Y,8BAmDnB,SAA0BC,GACtB,IADmC,IAAD,WACzBH,GACP,IAAM0D,EAAYC,SAASC,uBAAuB,aAChDC,YAAW,WAAO,IAAD,cACgB1D,EAAWH,GAD3B,GACR8D,EADQ,KACGC,EADH,KAEKL,EAAUI,GAAWE,MAC7BC,gBAAZ,cAAqCF,EAArC,kBACC/D,EAAIgD,IANFhD,EAAI,EAAGA,EAAIG,EAAWK,OAAQR,IAAM,EAApCA,GA9CTkE,EADmBC,EADHV,KAAKH,MAAMF,iBAAiB7C,OACfkD,KAAKH,MAAMpD,U,4EAOhC,IAAD,OACAA,EAASuD,KAAKH,MAAdpD,MAEP,OACE,yBAAKkE,UAAU,mBACpB,kBAAC,IAAD,CACSC,SAAUZ,KAAKN,gBACfmB,QAAShE,EAChBiE,YAAY,6BAEP,4BAAQC,QAAS,kBAAM,EAAKhC,SAA5B,QACP,kBAAC,IAAD,CACS6B,SAAU,SAACI,GAAD,OAAO,EAAKC,YAAYD,IAClCH,QAAS5B,EAChB6B,YAAY,0BAEd,6BACQrE,EAAMyE,KAAI,SAACpE,EAAOqE,GAAR,OACT,yBACER,UAAU,YACVS,IAAKD,EACLZ,MAAO,CACLC,gBAAgB,OAAD,OAAS1D,EAAT,gBACfuE,OAAO,cAGpB,kC,GA3D8CC,IAAMC,WAkErD,SAASpC,EAAsBjB,EAAKsD,GAElC,OAAOjE,KAAKC,MAAMD,KAAKuB,UAAY0C,EAAMtD,EAAM,GAAKA,GA+CtD,SAAS5B,EAAKC,EAAGC,EAAGC,GAClB,IAAIE,EAAMF,EAAMF,GAGlB,OAFEE,EAAMF,GAAKE,EAAMD,GACjBC,EAAMD,GAAKG,EACNF,E,MCxIQgF,MARf,WACE,OACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,QCKce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS9B,SAAS+B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.77f043f2.chunk.js","sourcesContent":["export function getBubbleSort(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  bubbleSort(array, animations);\n  return animations;\n}\n\nexport function getCocktailSort(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  cocktailSort(array, animations);\n  return animations;\n}\n\nexport function getQuickSort(array) {\n  const animations = [];\n  quickSort(array, animations, 0, array.length-1);\n  return animations;\n}\n\nexport function getSelectionSort(array) {\n  const animations = [];\n  selectionSort(array, animations);\n  return animations;\n}\n\nexport function getBogoSort(array) {\n  const animations = [];\n  bogoSort(array, animations);\n  return animations;\n}\n\nexport function getMergeSort(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSort(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction swap(\n  i, j, array, animations\n) {\n  let tmp = array[i];\n  array[i] = array[j];\n  animations.push([i, array[j]]);\n  array[j] = tmp;\n  animations.push([j, tmp]);\nreturn [array, animations];\n}\n\nfunction selectionSort(array, animations) {\n  for (var i = 0; i < array.length; i++){\n    let min = i;\n    for(let j = i+1; j < array.length; j++){\n      swap(j, j, array, animations)\n      if(array[j] < array[min]) {\n        min = j;\n      }\n    }\n    swap(i, min, array, animations)\n  }\n}\n\nfunction bogoSort(array, animations) {\n  function isSorted (array){\n        for(var i = 1; i < array.length; i++){\n            if (array[i-1] > array[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n  function shuffle(array, animations){\n        var count = array.length, index;\n        while(count > 0){\n            index = Math.floor(Math.random() * array.length);\n            count--;\n            [array, animations] = swap(count, index, array, animations)\n        }\n        return array;\n  }\n\n   function sort(array){\n        var sorted = false;\n        const max_tries = 500;\n        var count = 0;\n        while(!sorted && (count<max_tries)){\n            array = shuffle(array, animations);\n            sorted = isSorted(array);\n            count ++;\n        }\n        return array;\n    }\n\n    return sort(array);\n}\n\nfunction quickSort(array, animations, left, right) {\n  function partition(array, animations, left, right) {\n    var pivot = array[Math.floor((right + left) / 2)],\n      i = left, j = right;\n    while (i <= j) {\n      while (array[i] < pivot){\n        [array, animations] = swap(i, i, array, animations);\n        i++;\n      }\n      while (array[j] > pivot){\n        [array, animations] = swap(i, i, array, animations);\n        j--;\n      }\n      if (i <= j){\n        [array, animations] = swap(i, j, array, animations);\n        i++; j--;\n      }\n    }\n    return i;\n  }\n\n  var index;\n  if (array.length > 1) {\n    index = partition(array, animations, left, right)\n    if (left < index - 1) {\n      quickSort(array, animations, left, index-1)\n    }\n    if (right > index) {\n      quickSort(array, animations, index, right)\n    }\n  }\n}\n\nfunction cocktailSort(array, animations) {\n\n    let n = array.length;\n    let sorted = false;\n    console.log(n)\n\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < n - 1; i++) {\n            if (array[i] > array[i + 1]){\n              [array, animations] = swap(i, i+1, array, animations)\n               sorted = false;\n            }\n            else {\n              [array, animations] = swap(i, i, array, animations)\n            }\n\n   }\n\n   if (sorted)\n       break;\n   sorted = true;\n\n        for (let j = n - 1; j > 0; j--) {\n            if (array[j-1] > array[j]) {\n                [array, animations] = swap(j, j-1, array, animations)\n                sorted = false;\n            }\n            else {\n                [array, animations] = swap(j, j, array, animations)\n            }\n        }\n    }\n}\n\nfunction bubbleSort(\n  array,\n  animations,\n) {\n  let len = array.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < len - 1 - i; j++) {\n      if (array[j] > array[j + 1]) {\n        [array, animations] = swap(j, j+1, array, animations)\n      }\n      else {\n        [array, animations] = swap(j, j, array, animations)\n      }\n    }\n  }\n}\n\nfunction mergeSort(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSort(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSort(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport 'react-dropdown/style.css';\nimport {getMergeSort} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport {getBubbleSort} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport {getCocktailSort} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport {getQuickSort} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport {getSelectionSort} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport {getBogoSort} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport './SortingVisualizer.css';\n\nconst algorithms = [\n  { value: getMergeSort, label: 'Merge Sort' },\n  { value: getQuickSort, label: 'Quick Sort' },\n  { value: getSelectionSort, label: 'Selection Sort' },\n  { value: getCocktailSort, label: 'Cocktail Shaker Sort' },\n  { value: getBubbleSort, label: 'Bubble Sort' },\n  { value: getBogoSort, label: 'Bogo Sort' },\n];\n\nconst arrays = [\n  { value: randomArray, label: 'Random Array' },\n  { value: reversedArray, label: 'Reversed Array' },\n  { value: nearlySorted, label: 'Almost Sorted Array' },\n];\n\nconst ANIMATION_SPEED_MS = 0.1;\nconst NUMBER_OF_ARRAY_BARS = 610;\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n      sortingAlgorithm: null,\n    };\n  }\n\n  selectAlgorithm = sortingAlgorithm => {\n    this.setState(\n      { sortingAlgorithm: sortingAlgorithm },\n    );\n  };\n\n  chooseArray(arrayFunc) {\n\t  console.log(arrayFunc)\n    var func = arrayFunc.value\n\t  console.log(func)\n    const array = func()\n    this.setState({array});\n  }\n\n  sort() {\n    var algorithm = this.state.sortingAlgorithm.value;\n    const animations = algorithm(this.state.array);\n    play_animations(animations);\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const {array} = this.state;\n\n    return (\n      <div className=\"array-container\">\n\t<Select\n          onChange={this.selectAlgorithm}\n          options={algorithms}\n\t  placeholder='Select Sorting Algorithm'\n        />\n        <button onClick={() => this.sort()}>Sort</button>\n\t<Select\n          onChange={(e) => this.chooseArray(e)}\n          options={arrays}\n\t  placeholder='Select Starting Array'\n        />\n\t<br/>\n        {array.map((value, idx) => (\n          <div\n            className=\"array-bar\"\n            key={idx}\n            style={{\n              backgroundColor: `hsl(${value}, 100%, 50%)`,\n              height: `500px`,\n            }}></div>\n        ))}\n\t<br/>\n      </div>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n\nfunction play_animations (animations) {\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.backgroundColor = `hsl(${newHeight}, 100%, 50%)`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n}\n\nfunction randomArray() {\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    array.push(randomIntFromInterval(0, 360));\n  }\n  return array\n}\n\nfunction reversedArray() {\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    array.push(randomIntFromInterval(1, 359));\n  }\n  array.sort(function(a, b){return a - b});\n  array.reverse();\n  return array\n}\n\nfunction nearlySorted() {\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    array.push(randomIntFromInterval(1, 359));\n  }\n  array.sort(function(a, b){return a - b});\n  for (let k = 0; k < 10; k++) {\n    const i = randomIntFromInterval(0, NUMBER_OF_ARRAY_BARS)\n    const j = randomIntFromInterval(0, NUMBER_OF_ARRAY_BARS)\n    swap(i, j, array);\n  }\n  return array\n}\n\nfunction swap(i, j, array) {\n  let tmp = array[i];\n  array[i] = array[j];\n  array[j] = tmp;\nreturn array;\n}\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}