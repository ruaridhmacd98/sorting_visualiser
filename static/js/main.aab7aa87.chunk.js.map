{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["array_length","animations","swap","i","j","array","tmp","push","algorithms","value","length","auxiliaryArray","slice","mergeSort","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","doMerge","label","quickSort","left","right","index","pivot","partition","min","selectionSort","n","sorted","console","log","cocktailSort","len","bubbleSort","isSorted","shuffle","count","random","sort","bogoSort","heap_root","max","heapSort","arrays","NUMBER_OF_ARRAY_BARS","randomIntFromInterval","a","b","reverse","ANIMATION_SPEED_MS","SortingVisualizer","props","selectAlgorithm","sortingAlgorithm","setState","state","arrayFunc","func","this","arrayBars","document","getElementsByClassName","setTimeout","shift","barOneIdx","newHeight","style","backgroundColor","play_animations","algorithm","className","onChange","options","placeholder","onClick","e","chooseArray","map","idx","key","height","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aab7aa87.chunk.js","sourcesContent":["const animations = [];\n\nexport function getBubbleSort(array) {\n  if (array.length <= 1) return array;\n  bubbleSort(array);\n  return animations;\n}\n\nexport function getCocktailSort(array) {\n  if (array.length <= 1) return array;\n  cocktailSort(array);\n  return animations;\n}\n\nexport function getQuickSort(array) {\n  quickSort(array, 0, array.length-1);\n  return animations;\n}\n\nexport function getSelectionSort(array) {\n  selectionSort(array);\n  return animations;\n}\n\nexport function getBogoSort(array) {\n  bogoSort(array);\n  return animations;\n}\n\nexport function getHeapSort(array) {\n  heapSort(array);\n  return animations;\n}\n\nexport function getMergeSort(array) {\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSort(array, 0, array.length - 1, auxiliaryArray);\n  return animations;\n}\n\nfunction swap(\n  i, j, array\n) {\n  let tmp = array[i];\n  array[i] = array[j];\n  animations.push([i, array[j]]);\n  array[j] = tmp;\n  animations.push([j, tmp]);\nreturn array;\n}\n\nvar array_length;\nfunction heapSort(array) {\n  function heap_root(array, i) {\n    var left = 2 * i + 1;\n    var right = 2 * i + 2;\n    var max = i;\n\n    if (left < array_length && array[left] > array[max]) {\n        swap(left, left, array);\n        max = left;\n    }\n\n    if (right < array_length && array[right] > array[max])     {\n        swap(right, right, array);\n        max = right;\n    }\n\n    if (max !== i) {\n        swap(i, max, array);\n        heap_root(array, max);\n    }\n  }\n\n    array_length = array.length;\n    for (var i = Math.floor(array_length / 2); i >= 0; i -= 1)      {\n        heap_root(array, i);\n      }\n\n    for (i = array.length - 1; i > 0; i--) {\n        swap(0, i, array);\n        array_length--;\n        heap_root(array, 0);\n    }\n}\nfunction selectionSort(array) {\n  for (var i = 0; i < array.length; i++){\n    let min = i;\n    for(let j = i+1; j < array.length; j++){\n      swap(j, j, array)\n      if(array[j] < array[min]) {\n        min = j;\n      }\n    }\n    swap(i, min, array)\n  }\n}\n\nfunction bogoSort(array) {\n  function isSorted (array){\n        for(var i = 1; i < array.length; i++){\n            if (array[i-1] > array[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n  function shuffle(array){\n        var count = array.length, index;\n        while(count > 0){\n            index = Math.floor(Math.random() * array.length);\n            count--;\n            array = swap(count, index, array)\n        }\n        return array;\n  }\n\n   function sort(array){\n        var sorted = false;\n        const max_tries = 500;\n        var count = 0;\n        while(!sorted && (count<max_tries)){\n            array = shuffle(array);\n            sorted = isSorted(array);\n            count ++;\n        }\n        return array;\n    }\n\n    return sort(array);\n}\n\nfunction quickSort(array, left, right) {\n  function partition(array, left, right) {\n    var pivot = array[Math.floor((right + left) / 2)],\n      i = left, j = right;\n    while (i <= j) {\n      while (array[i] < pivot){\n        array = swap(i, i, array);\n        i++;\n      }\n      while (array[j] > pivot){\n        array = swap(i, i, array);\n        j--;\n      }\n      if (i <= j){\n        array = swap(i, j, array);\n        i++; j--;\n      }\n    }\n    return i;\n  }\n\n  var index;\n  if (array.length > 1) {\n    index = partition(array, left, right)\n    if (left < index - 1) {\n      quickSort(array, left, index-1)\n    }\n    if (right > index) {\n      quickSort(array, index, right)\n    }\n  }\n}\n\nfunction cocktailSort(array) {\n\n    let n = array.length;\n    let sorted = false;\n    console.log(n)\n\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < n - 1; i++) {\n            if (array[i] > array[i + 1]){\n              array = swap(i, i+1, array)\n               sorted = false;\n            }\n            else {\n              array = swap(i, i, array)\n            }\n\n   }\n\n   if (sorted)\n       break;\n   sorted = true;\n\n        for (let j = n - 1; j > 0; j--) {\n            if (array[j-1] > array[j]) {\n                array = swap(j, j-1, array)\n                sorted = false;\n            }\n            else {\n                array = swap(j, j, array)\n            }\n        }\n    }\n}\n\nfunction bubbleSort(\n  array,\n) {\n  let len = array.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < len - 1 - i; j++) {\n      if (array[j] > array[j + 1]) {\n        array = swap(j, j+1, array)\n      }\n      else {\n        array = swap(j, j, array)\n      }\n    }\n  }\n}\n\nfunction mergeSort(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSort(auxiliaryArray, startIdx, middleIdx, mainArray);\n  mergeSort(auxiliaryArray, middleIdx + 1, endIdx, mainArray);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport 'react-dropdown/style.css';\nimport * as sorting from '../sortingAlgorithms/sortingAlgorithms.js';\nimport './SortingVisualizer.css';\n\nconst algorithms = [\n  { value: sorting.getMergeSort, label: 'Merge Sort' },\n  { value: sorting.getQuickSort, label: 'Quick Sort' },\n  { value: sorting.getSelectionSort, label: 'Selection Sort' },\n  { value: sorting.getCocktailSort, label: 'Cocktail Shaker Sort' },\n  { value: sorting.getBubbleSort, label: 'Bubble Sort' },\n  { value: sorting.getBogoSort, label: 'Bogo Sort' },\n  { value: sorting.getHeapSort, label: 'Heap Sort' },\n];\n\nconst arrays = [\n  { value: randomArray, label: 'Random Array' },\n  { value: reversedArray, label: 'Reversed Array' },\n  { value: nearlySorted, label: 'Almost Sorted Array' },\n];\n\nconst ANIMATION_SPEED_MS = 0.1;\nconst NUMBER_OF_ARRAY_BARS = 610;\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n      sortingAlgorithm: null,\n    };\n  }\n\n  selectAlgorithm = sortingAlgorithm => {\n    this.setState(\n      { sortingAlgorithm: sortingAlgorithm },\n    );\n  };\n\n  chooseArray(arrayFunc) {\n\t  console.log(arrayFunc)\n    var func = arrayFunc.value\n\t  console.log(func)\n    const array = func()\n    this.setState({array});\n  }\n\n  sort() {\n    var algorithm = this.state.sortingAlgorithm.value;\n    const animations = algorithm(this.state.array);\n    play_animations(animations);\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const {array} = this.state;\n\n    return (\n      <div className=\"array-container\">\n\t<Select\n          onChange={this.selectAlgorithm}\n          options={algorithms}\n\t  placeholder='Select Sorting Algorithm'\n        />\n        <button onClick={() => this.sort()}>Sort</button>\n\t<Select\n          onChange={(e) => this.chooseArray(e)}\n          options={arrays}\n\t  placeholder='Select Starting Array'\n        />\n\t<br/>\n        {array.map((value, idx) => (\n          <div\n            className=\"array-bar\"\n            key={idx}\n            style={{\n              backgroundColor: `hsl(${value}, 100%, 50%)`,\n              height: `500px`,\n            }}></div>\n        ))}\n\t<br/>\n      </div>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n\nfunction play_animations (animations) {\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations.shift();\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.backgroundColor = `hsl(${newHeight}, 100%, 50%)`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n}\n\nfunction randomArray() {\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    array.push(randomIntFromInterval(0, 360));\n  }\n  return array\n}\n\nfunction reversedArray() {\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    array.push(randomIntFromInterval(1, 359));\n  }\n  array.sort(function(a, b){return a - b});\n  array.reverse();\n  return array\n}\n\nfunction nearlySorted() {\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    array.push(randomIntFromInterval(1, 359));\n  }\n  array.sort(function(a, b){return a - b});\n  for (let k = 0; k < 10; k++) {\n    const i = randomIntFromInterval(0, NUMBER_OF_ARRAY_BARS)\n    const j = randomIntFromInterval(0, NUMBER_OF_ARRAY_BARS)\n    swap(i, j, array);\n  }\n  return array\n}\n\nfunction swap(i, j, array) {\n  let tmp = array[i];\n  array[i] = array[j];\n  array[j] = tmp;\nreturn array;\n}\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}