{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["animations","swap","i","j","array","tmp","push","size_threshold","heap_root","left","right","left_child","right_child","max","heapSort","Math","ceil","insertionSort","partition","pivot","floor","algorithms","value","introsort_loop","depth_limit","p","length","log","floor_lg","introSort","label","auxiliaryArray","slice","mergeSort","mainArray","startIdx","endIdx","middleIdx","k","doMerge","quickSort","index","min","selectionSort","h","parseInt","shellSort","n","sorted","cocktailSort","len","bubbleSort","interval","combSort","isSorted","shuffle","count","random","sort","bogoSort","arrays","NUMBER_OF_ARRAY_BARS","randomIntFromInterval","a","b","reverse","ANIMATION_SPEED_MS","SortingVisualizer","props","selectAlgorithm","sortingAlgorithm","setState","state","arrayFunc","console","func","this","arrayBars","document","getElementsByClassName","setTimeout","shift","barOneIdx","newHeight","style","backgroundColor","play_animations","algorithm","className","onChange","options","placeholder","onClick","e","chooseArray","map","idx","key","height","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uUAAMA,G,MAAa,IA8DnB,SAASC,EAAKC,EAAGC,EAAGC,GAClB,IAAIC,EAAMD,EAAMF,GAKhB,OAJAE,EAAMF,GAAKE,EAAMD,GACjBH,EAAWM,KAAK,CAACJ,EAAGE,EAAMD,KAC1BC,EAAMD,GAAKE,EACXL,EAAWM,KAAK,CAACH,EAAGE,IACbD,EAGT,IAAIG,EAAiB,GAsBrB,SAASC,EAAUJ,EAAOF,EAAGO,EAAMC,GACjC,IAAIC,EAAa,GAAKT,EAAEO,GAAQ,EAAIA,EAChCG,EAAc,GAAKV,EAAEO,GAAQ,EAAIA,EACjCI,EAAMX,EACNS,EAAaD,GAASN,EAAMO,GAAcP,EAAMS,KAChDA,EAAMF,GAENC,EAAcF,GAASN,EAAMQ,GAAeR,EAAMS,KAClDA,EAAMD,GAEVX,EAAKC,EAAGW,EAAKT,GACTS,IAAQX,GACRM,EAAUJ,EAAOS,EAAKJ,EAAMC,GAIlC,SAASI,EAASV,EAAOK,EAAMC,GAC7B,IAAK,IAAIR,EAAIO,EAAKM,KAAKC,MAAMN,EAAMD,GAAM,GAAIP,GAAKO,EAAMP,GAAK,EACzDM,EAAUJ,EAAOF,EAAGO,EAAMC,GAE9B,IAAKR,EAAIQ,EAAM,EAAGR,GAAKO,EAAMP,IACzBD,EAAKQ,EAAMP,EAAGE,GACdI,EAAUJ,EAAOK,EAAMA,EAAMP,GAiBnC,SAASe,EAAcb,EAAOK,EAAMC,GAC5B,IAAK,IAAIR,EAAIO,EAAK,EAAGP,EAAIQ,EAAOR,IAE5B,IADA,IAAIC,EAAID,EACAC,EAAIM,GAAUL,EAAMD,EAAE,GAAKC,EAAMD,IACnDC,EAAQH,EAAKE,EAAE,EAAGA,EAAGC,GACPD,IAGZ,OAAOC,EA+CX,SAASc,EAAUd,EAAOK,EAAMC,GAG9B,IAFA,IAAIS,EAAQf,EAAMW,KAAKK,OAAOV,EAAQD,GAAQ,IAC5CP,EAAIO,EAAMN,EAAIO,EACTR,GAAKC,GAAG,CACb,KAAOC,EAAMF,GAAKiB,GAChBf,EAAQH,EAAKC,EAAGA,EAAGE,GACnBF,IAEF,KAAOE,EAAMD,GAAKgB,GAChBf,EAAQH,EAAKC,EAAGA,EAAGE,GACnBD,IAEED,GAAKC,IACPC,EAAQH,EAAKC,EAAGC,EAAGC,GACnBF,IAAKC,KAGT,OAAOD,E,UCtMHmB,EAAa,CACjB,CAAEC,MD2CG,SAAsBlB,GAE3B,OAoBF,SAAmBA,IAOnB,SAASmB,EAAgBnB,EAAOK,EAAMC,EAAOc,GACzC,KAAOd,EAAMD,EAAOF,GAAgB,CAChC,GAAoB,IAAhBiB,EAEA,YADAV,EAASV,EAAOK,EAAMC,GAG1Bc,GAAwB,EACxB,IAAIC,EAAIP,EAAUd,EAAOK,EAAMC,EAAM,GACrCa,EAAenB,EAAOqB,EAAGf,EAAOc,GAChCd,EAAQe,EAEZR,EAAcb,EAAOK,EAAMC,GAd7Ba,CAAenB,EAAO,EAAGA,EAAMsB,OAAQ,EAHvC,SAAkBtB,GACd,OAAQW,KAAKK,MAAML,KAAKY,IAAIvB,GAAOW,KAAKY,IAAI,KAAQ,EAEbC,CAASxB,EAAMsB,SAzB1DG,CAAUzB,GACHJ,GC7CwB8B,MAAO,cACtC,CAAER,MD+CG,SAAsBlB,GAC3B,GAAIA,EAAMsB,QAAU,EAAG,OAAOtB,EAC9B,IAAM2B,EAAiB3B,EAAM4B,QAE7B,OA0NF,SAASC,EACPC,EACAC,EACAC,EACAL,GAEA,GAAII,IAAaC,EAAQ,OACzB,IAAMC,EAAYtB,KAAKK,OAAOe,EAAWC,GAAU,GACnDH,EAAUF,EAAgBI,EAAUE,EAAWH,GAC/CD,EAAUF,EAAgBM,EAAY,EAAGD,EAAQF,IAInD,SACEA,EACAC,EACAE,EACAD,EACAL,GAEA,IAAIO,EAAIH,EACJjC,EAAIiC,EACJhC,EAAIkC,EAAY,EACpB,KAAOnC,GAAKmC,GAAalC,GAAKiC,GACxBL,EAAe7B,IAAM6B,EAAe5B,IACtCH,EAAWM,KAAK,CAACgC,EAAGP,EAAe7B,KACnCgC,EAAUI,KAAOP,EAAe7B,OAEhCF,EAAWM,KAAK,CAACgC,EAAGP,EAAe5B,KACnC+B,EAAUI,KAAOP,EAAe5B,MAGpC,KAAOD,GAAKmC,GACVrC,EAAWM,KAAK,CAACgC,EAAGP,EAAe7B,KACnCgC,EAAUI,KAAOP,EAAe7B,KAElC,KAAOC,GAAKiC,GACVpC,EAAWM,KAAK,CAACgC,EAAGP,EAAe5B,KACnC+B,EAAUI,KAAOP,EAAe5B,KA5BlCoC,CAAQL,EAAWC,EAAUE,EAAWD,EAAQL,GArOhDE,CAAU7B,EAAO,EAAGA,EAAMsB,OAAS,EAAGK,GAC/B/B,GCnDwB8B,MAAO,cACtC,CAAER,MDWG,SAAsBlB,GAE3B,OAyLF,SAASoC,EAAUpC,EAAOK,EAAMC,GAC9B,IAAI+B,EACArC,EAAMsB,OAAS,IACjBe,EAAQvB,EAAUd,EAAOK,EAAMC,GAC3BD,EAAOgC,EAAQ,GACjBD,EAAUpC,EAAOK,EAAMgC,EAAM,GAE3B/B,EAAQ+B,GACVD,EAAUpC,EAAOqC,EAAO/B,IAlM5B8B,CAAUpC,EAAO,EAAGA,EAAMsB,OAAO,GAC1B1B,GCbwB8B,MAAO,cACtC,CAAER,MDeG,SAA0BlB,GAE/B,OA4FF,SAAuBA,GACrB,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAMsB,OAAQxB,IAAI,CAEpC,IADA,IAAIwC,EAAMxC,EACFC,EAAID,EAAE,EAAGC,EAAIC,EAAMsB,OAAQvB,IAE9BC,EAAMD,GAAKC,EAAMsC,KAClBA,EAAMvC,GAGVF,EAAKC,EAAGwC,EAAKtC,IAtGfuC,CAAcvC,GACPJ,GCjB4B8B,MAAO,kBAC1C,CAAER,MDmBG,SAA0BlB,GAE/B,OADAa,EAAcb,EAAO,EAAGA,EAAMsB,QACvB1B,GCrB4B8B,MAAO,kBAC1C,CAAER,MDuBG,SAAsBlB,GAE3B,OA0GF,SAAoBA,GAChB,IAAK,IAAIwC,EAAIxC,EAAMsB,OAAQkB,EAAI,EAAGA,EAAIC,SAASD,EAAI,GAC/C,IAAK,IAAI1C,EAAI0C,EAAG1C,EAAIE,EAAMsB,OAAQxB,IAC9B,IAAK,IAAIC,EAAID,EAAGC,GAAKyC,GAAKxC,EAAMD,GAAKC,EAAMD,EAAIyC,GAAIzC,GAAKyC,EAClExC,EAAQH,EAAKE,EAAEyC,EAAGzC,EAAGC,GA/GrB0C,CAAU1C,GACHJ,GCzBwB8B,MAAO,cACtC,CAAER,MDCG,SAAyBlB,GAC9B,OAAIA,EAAMsB,QAAU,EAAUtB,GA6MhC,SAAsBA,GAElB,IAAI2C,EAAI3C,EAAMsB,OACVsB,GAAS,EACb,MAAQA,GAAQ,CACZA,GAAS,EACT,IAAK,IAAI9C,EAAI,EAAGA,EAAI6C,EAAI,EAAG7C,IACnBE,EAAMF,GAAKE,EAAMF,EAAI,IACvBE,EAAQH,EAAKC,EAAGA,EAAE,EAAGE,GACpB4C,GAAS,GAEV5C,EAAQH,EAAKC,EAAGA,EAAGE,GAGzB,GAAI4C,EACA,MACJA,GAAS,EACT,IAAK,IAAI7C,EAAI4C,EAAI,EAAG5C,EAAI,EAAGA,IACnBC,EAAMD,EAAE,GAAKC,EAAMD,IACnBC,EAAQH,EAAKE,EAAGA,EAAE,EAAGC,GACrB4C,GAAS,GAGT5C,EAAQH,EAAKE,EAAGA,EAAGC,IAnOjC6C,CAAa7C,GACNJ,ICJ2B8B,MAAO,wBACzC,CAAER,MDZG,SAAuBlB,GAC5B,OAAIA,EAAMsB,QAAU,EAAUtB,GAoQhC,SAAoBA,GAElB,IADA,IAAI8C,EAAM9C,EAAMsB,OACPxB,EAAI,EAAGA,EAAIgD,EAAKhD,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAI+C,EAAM,EAAIhD,EAAGC,IAE7BC,EADEA,EAAMD,GAAKC,EAAMD,EAAI,GACfF,EAAKE,EAAGA,EAAE,EAAGC,GAGbH,EAAKE,EAAGA,EAAGC,GA3QzB+C,CAAW/C,GACJJ,ICSyB8B,MAAO,eACvC,CAAER,MDPG,SAAqBlB,GAC1B,OAAIA,EAAMsB,QAAU,EAAUtB,GAgPhC,SAAkBA,GAChB,IAAIgD,EAAWrC,KAAKK,MAAMhB,EAAMsB,OAAO,KACvC,KAAO0B,EAAW,GAAG,CACnB,IAAI,IAAIlD,EAAE,EAAGA,EAAEkD,EAAShD,EAAMsB,OAAQxB,GAAG,EAE5CE,EADSA,EAAMF,GAAKE,EAAMF,EAAEkD,GACpBnD,EAAKC,EAAGA,EAAEkD,EAAUhD,GAEpBH,EAAKC,EAAGA,EAAGE,GAGhBgD,EAAWrC,KAAKK,MAAMgC,EAAS,MAzPjCC,CAASjD,GACFJ,ICIuB8B,MAAO,aACrC,CAAER,MDwBG,SAAqBlB,GAE1B,OA+GF,SAAkBA,GAChB,SAASkD,EAAUlD,GACb,IAAI,IAAIF,EAAI,EAAGA,EAAIE,EAAMsB,OAAQxB,IAC7B,GAAIE,EAAMF,EAAE,GAAKE,EAAMF,GACnB,OAAO,EAGf,OAAO,EAGb,SAASqD,EAAQnD,GAEX,IADA,IAAIoD,EAAQpD,EAAMsB,OACZ8B,EAAQ,GAGVpD,EAAQH,IADRuD,EADQzC,KAAKK,MAAML,KAAK0C,SAAWrD,EAAMsB,QAEdtB,GAE/B,OAAOA,GAGZ,SAAcA,GAIT,IAHA,IAAI4C,GAAS,EAETQ,EAAQ,GACLR,GAAWQ,EAFA,KAIdR,EAASM,EADTlD,EAAQmD,EAAQnD,IAEhBoD,IAIRE,CAAKtD,GA/IPuD,CAASvD,GACFJ,GC1BuB8B,MAAO,aACrC,CAAER,MD4BG,SAAqBlB,GAE1B,OADAU,EAASV,EAAO,EAAGA,EAAMsB,QAClB1B,GC9BuB8B,MAAO,cAGjC8B,EAAS,CACb,CAAEtC,MA+FJ,WAEE,IADA,IAAMlB,EAAQ,GACLF,EAAI,EAAGA,EAAI2D,EAAsB3D,IACxCE,EAAME,KAAKwD,EAAsB,EAAG,MAEtC,OAAO1D,GApGe0B,MAAO,gBAC7B,CAAER,MAsGJ,WAEE,IADA,IAAMlB,EAAQ,GACLF,EAAI,EAAGA,EAAI2D,EAAsB3D,IACxCE,EAAME,KAAKwD,EAAsB,EAAG,MAItC,OAFA1D,EAAMsD,MAAK,SAASK,EAAGC,GAAG,OAAOD,EAAIC,KACrC5D,EAAM6D,UACC7D,GA7GiB0B,MAAO,kBAC/B,CAAER,MA+GJ,WAEE,IADA,IAAMlB,EAAQ,GACLF,EAAI,EAAGA,EAAI2D,EAAsB3D,IACxCE,EAAME,KAAKwD,EAAsB,EAAG,MAEtC1D,EAAMsD,MAAK,SAASK,EAAGC,GAAG,OAAOD,EAAIC,KACrC,IAAK,IAAI1B,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMpC,EAAI4D,EAAsB,EAAGD,GAC7B1D,EAAI2D,EAAsB,EAAGD,GACnC5D,EAAKC,EAAGC,EAAGC,GAEb,OAAOA,GA1HgB0B,MAAO,wBAG1BoC,EAAqB,GACrBL,EAAuB,IAERM,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAQRC,gBAAkB,SAAAC,GAChB,EAAKC,SACH,CAAED,iBAAkBA,KARtB,EAAKE,MAAQ,CACXpE,MAAO,GACPkE,iBAAkB,MALH,E,yEAePG,GACXC,QAAQ/C,IAAI8C,GACX,IAAIE,EAAOF,EAAUnD,MACtBoD,QAAQ/C,IAAIgD,GACX,IAAMvE,EAAQuE,IACdC,KAAKL,SAAS,CAACnE,Y,8BAuDnB,SAA0BJ,GACtB,IADmC,IAAD,WACzBE,GACP,IAAM2E,EAAYC,SAASC,uBAAuB,aAChDC,YAAW,WAAO,IAAD,EACgBhF,EAAWiF,QAD3B,mBACRC,EADQ,KACGC,EADH,KAEKN,EAAUK,GAAWE,MAC7BC,gBAAZ,cAAqCF,EAArC,kBACCjF,EAAIgE,IANFhE,EAAI,EAAGA,EAAIF,EAAW0B,OAAQxB,IAAM,EAApCA,GAlDToF,EADmBC,EADHX,KAAKJ,MAAMF,iBAAiBhD,OACfsD,KAAKJ,MAAMpE,U,4EAOhC,IAAD,OACAA,EAASwE,KAAKJ,MAAdpE,MAEP,OACE,yBAAKoF,UAAU,mBACpB,6BACA,kBAAC,IAAD,CACEA,UAAU,UACHC,SAAUb,KAAKP,gBACfqB,QAASrE,EAChBsE,YAAY,6BAEP,4BAAQH,UAAU,SAAUI,QAAS,kBAAM,EAAKlC,SAAhD,QACP,kBAAC,IAAD,CACE8B,UAAU,UACHC,SAAU,SAACI,GAAD,OAAO,EAAKC,YAAYD,IAClCH,QAAS9B,EAChB+B,YAAY,2BAGd,6BACQvF,EAAM2F,KAAI,SAACzE,EAAO0E,GAAR,OACT,yBACER,UAAU,YACVS,IAAKD,EACLZ,MAAO,CACLC,gBAAgB,OAAD,OAAS/D,EAAT,gBACf4E,OAAO,cAGpB,kC,GA/D8CC,IAAMC,WAsErD,SAAStC,EAAsBpB,EAAK7B,GAElC,OAAOE,KAAKK,MAAML,KAAK0C,UAAY5C,EAAM6B,EAAM,GAAKA,GA+CtD,SAASzC,EAAKC,EAAGC,EAAGC,GAClB,IAAIC,EAAMD,EAAMF,GAGlB,OAFEE,EAAMF,GAAKE,EAAMD,GACjBC,EAAMD,GAAKE,EACND,E,MC5IQiG,MARf,WACE,OACE,yBAAKb,UAAU,OACb,kBAAC,EAAD,QCKcc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS9B,SAAS+B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4301b882.chunk.js","sourcesContent":["const animations = [];\n\nexport function getBubbleSort(array) {\n  if (array.length <= 1) return array;\n  bubbleSort(array);\n  return animations;\n}\n\nexport function getCombSort(array) {\n  if (array.length <= 1) return array;\n  combSort(array);\n  return animations;\n}\n\nexport function getCocktailSort(array) {\n  if (array.length <= 1) return array;\n  cocktailSort(array);\n  return animations;\n}\n\nexport function getQuickSort(array) {\n  quickSort(array, 0, array.length-1);\n  return animations;\n}\n\nexport function getSelectionSort(array) {\n  selectionSort(array);\n  return animations;\n}\n\nexport function getInsertionSort(array) {\n  insertionSort(array, 0, array.length);\n  return animations;\n}\n\nexport function getShellSort(array) {\n  shellSort(array);\n  return animations;\n}\n\nexport function getBogoSort(array) {\n  bogoSort(array);\n  return animations;\n}\n\nexport function getHeapSort(array) {\n  heapSort(array, 0, array.length);\n  return animations;\n}\n\nexport function getIntroSort(array) {\n  introSort(array);\n  return animations;\n}\n\nexport function getMergeSort(array) {\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSort(array, 0, array.length - 1, auxiliaryArray);\n  return animations;\n}\n\nfunction swap(i, j, array) {\n  let tmp = array[i];\n  array[i] = array[j];\n  animations.push([i, array[j]]);\n  array[j] = tmp;\n  animations.push([j, tmp]);\n  return array;\n}\n\nvar size_threshold = 16;\nfunction introSort(array){\n  function floor_lg(array) {\n      return (Math.floor(Math.log(array)/Math.log(2))) << 0;\n  }\n  introsort_loop(array, 0, array.length, 2 * floor_lg(array.length));\n}\n\nfunction introsort_loop (array, left, right, depth_limit) {\n    while (right-left > size_threshold) {\n        if (depth_limit === 0) {\n            heapSort(array, left, right);\n            return;\n        }\n        depth_limit=depth_limit-1;\n        var p = partition(array, left, right-1);\n        introsort_loop(array, p, right, depth_limit);\n        right = p;\n    }\n    insertionSort(array, left, right);\n}\n\nfunction heap_root(array, i, left, right) {\n  var left_child = 2 * (i-left) + 1 + left;\n  var right_child = 2 * (i-left) + 2 + left;\n  var max = i;\n  if (left_child < right && array[left_child] > array[max]) {\n      max = left_child;\n  }\n  if (right_child < right && array[right_child] > array[max])     {\n      max = right_child;\n  }\n  swap(i, max, array);\n  if (max !== i) {\n      heap_root(array, max, left, right);\n  }\n}\n\nfunction heapSort(array, left, right) {\n  for (var i = left+Math.ceil((right-left)/2); i >= left; i -= 1)      {\n      heap_root(array, i, left, right);\n  }\n  for (i = right-1; i >= left; i--) {\n      swap(left, i, array);\n      heap_root(array, left, left, i);\n  }\n}\n\nfunction selectionSort(array) {\n  for (var i = 0; i < array.length; i++){\n    let min = i;\n    for(let j = i+1; j < array.length; j++){\n      /* swap(j, j, array) */\n      if(array[j] < array[min]) {\n        min = j;\n      }\n    }\n    swap(i, min, array)\n  }\n}\n\nfunction insertionSort(array, left, right) {\n        for (let i = left+1; i < right; i++) {\n            let j = i;\n            while ((j > left) && (array[j-1] > array[j])) {\n\t\tarray = swap(j-1, j, array)\n                j--;\n            }\n        }\n    return array;\n}\n\nfunction shellSort (array) {\n    for (var h = array.length; h > 0; h = parseInt(h / 2)) {\n        for (var i = h; i < array.length; i++) {\n            for (var j = i; j >= h && array[j] < array[j - h]; j -= h)\n\t\tarray = swap(j-h, j, array)\n        }\n    }\n    return array;\n}\n\nfunction bogoSort(array) {\n  function isSorted (array){\n        for(var i = 1; i < array.length; i++){\n            if (array[i-1] > array[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n  function shuffle(array){\n        var count = array.length, index;\n        while(count > 0){\n            index = Math.floor(Math.random() * array.length);\n            count--;\n            array = swap(count, index, array)\n        }\n        return array;\n  }\n\n   function sort(array){\n        var sorted = false;\n        const max_tries = 500;\n        var count = 0;\n        while(!sorted && (count<max_tries)){\n            array = shuffle(array);\n            sorted = isSorted(array);\n            count ++;\n        }\n        return array;\n    }\n    sort(array);\n}\n\nfunction partition(array, left, right) {\n  var pivot = array[Math.floor((right + left) / 2)],\n    i = left, j = right;\n  while (i <= j) {\n    while (array[i] < pivot){\n      array = swap(i, i, array);\n      i++;\n    }\n    while (array[j] > pivot){\n      array = swap(i, i, array);\n      j--;\n    }\n    if (i <= j){\n      array = swap(i, j, array);\n      i++; j--;\n    }\n  }\n  return i;\n}\n\nfunction quickSort(array, left, right) {\n  var index;\n  if (array.length > 1) {\n    index = partition(array, left, right)\n    if (left < index - 1) {\n      quickSort(array, left, index-1)\n    }\n    if (right > index) {\n      quickSort(array, index, right)\n    }\n  }\n}\n\nfunction cocktailSort(array) {\n\n    let n = array.length;\n    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < n - 1; i++) {\n            if (array[i] > array[i + 1]){\n              array = swap(i, i+1, array)\n               sorted = false;\n            } else {\n              array = swap(i, i, array)\n            }\n\t}\n        if (sorted)\n            break;\n        sorted = true;\n        for (let j = n - 1; j > 0; j--) {\n            if (array[j-1] > array[j]) {\n                array = swap(j, j-1, array)\n                sorted = false;\n            }\n            else {\n                array = swap(j, j, array)\n            }\n        }\n   }\n}\n\nfunction combSort(array){\n  var interval = Math.floor(array.length/1.3);\n  while (interval > 0) {\n    for(var i=0; i+interval<array.length; i+=1) {\n      if (array[i] > array[i+interval]) {\n\tarray = swap(i, i+interval, array)\n      }else {\n\tarray = swap(i, i, array)\n      }\n    }\n    interval = Math.floor(interval/1.3);\n  }\n}\n\nfunction bubbleSort(array) {\n  let len = array.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < len - 1 - i; j++) {\n      if (array[j] > array[j + 1]) {\n        array = swap(j, j+1, array)\n      }\n      else {\n        array = swap(j, j, array)\n      }\n    }\n  }\n}\n\nfunction mergeSort(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSort(auxiliaryArray, startIdx, middleIdx, mainArray);\n  mergeSort(auxiliaryArray, middleIdx + 1, endIdx, mainArray);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport 'react-dropdown/style.css';\nimport * as sorting from '../sortingAlgorithms/sortingAlgorithms.js';\nimport './SortingVisualizer.css';\n\nconst algorithms = [\n  { value: sorting.getIntroSort, label: 'Intro Sort' },\n  { value: sorting.getMergeSort, label: 'Merge Sort' },\n  { value: sorting.getQuickSort, label: 'Quick Sort' },\n  { value: sorting.getSelectionSort, label: 'Selection Sort' },\n  { value: sorting.getInsertionSort, label: 'Insertion Sort' },\n  { value: sorting.getShellSort, label: 'Shell Sort' },\n  { value: sorting.getCocktailSort, label: 'Cocktail Shaker Sort' },\n  { value: sorting.getBubbleSort, label: 'Bubble Sort' },\n  { value: sorting.getCombSort, label: 'Comb Sort' },\n  { value: sorting.getBogoSort, label: 'Bogo Sort' },\n  { value: sorting.getHeapSort, label: 'Heap Sort' },\n];\n\nconst arrays = [\n  { value: randomArray, label: 'Random Array' },\n  { value: reversedArray, label: 'Reversed Array' },\n  { value: nearlySorted, label: 'Almost Sorted Array' },\n];\n\nconst ANIMATION_SPEED_MS = 0.1;\nconst NUMBER_OF_ARRAY_BARS = 610;\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n      sortingAlgorithm: null,\n    };\n  }\n\n  selectAlgorithm = sortingAlgorithm => {\n    this.setState(\n      { sortingAlgorithm: sortingAlgorithm },\n    );\n  };\n\n  chooseArray(arrayFunc) {\n\t  console.log(arrayFunc)\n    var func = arrayFunc.value\n\t  console.log(func)\n    const array = func()\n    this.setState({array});\n  }\n\n  sort() {\n    var algorithm = this.state.sortingAlgorithm.value;\n    const animations = algorithm(this.state.array);\n    play_animations(animations);\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const {array} = this.state;\n\n    return (\n      <div className=\"array-container\">\n\t<div>\n\t<Select\n\t  className='choices'\n          onChange={this.selectAlgorithm}\n          options={algorithms}\n\t  placeholder='Select Sorting Algorithm'\n        />\n        <button className=\"button\"  onClick={() => this.sort()}>Sort</button>\n\t<Select\n\t  className='choices'\n          onChange={(e) => this.chooseArray(e)}\n          options={arrays}\n\t  placeholder='Select Starting Array'\n        />\n\t</div>\n\t<br/>\n        {array.map((value, idx) => (\n          <div\n            className=\"array-bar\"\n            key={idx}\n            style={{\n              backgroundColor: `hsl(${value}, 100%, 50%)`,\n              height: `500px`,\n            }}></div>\n        ))}\n\t<br/>\n      </div>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n\nfunction play_animations (animations) {\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations.shift();\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.backgroundColor = `hsl(${newHeight}, 100%, 50%)`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n}\n\nfunction randomArray() {\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    array.push(randomIntFromInterval(0, 360));\n  }\n  return array\n}\n\nfunction reversedArray() {\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    array.push(randomIntFromInterval(1, 359));\n  }\n  array.sort(function(a, b){return a - b});\n  array.reverse();\n  return array\n}\n\nfunction nearlySorted() {\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    array.push(randomIntFromInterval(1, 359));\n  }\n  array.sort(function(a, b){return a - b});\n  for (let k = 0; k < 10; k++) {\n    const i = randomIntFromInterval(0, NUMBER_OF_ARRAY_BARS)\n    const j = randomIntFromInterval(0, NUMBER_OF_ARRAY_BARS)\n    swap(i, j, array);\n  }\n  return array\n}\n\nfunction swap(i, j, array) {\n  let tmp = array[i];\n  array[i] = array[j];\n  array[j] = tmp;\nreturn array;\n}\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}